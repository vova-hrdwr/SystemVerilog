//gets the packet from the monitor, generates the expected results 
//and compares with the actual results received from the monitor

class scoreboard;
   
  //create mailbox handle
  mailbox mon2scbin;
  mailbox mon2scbout;
  
  //count the number of transactions
  int num_transactions;
  // reference memory
  logic [7:0]check[7:0] ='{default: 8'hFF};
  integer mon_in_scb;
  
  //constructor
  function new(mailbox mon2scbin, mailbox mon2scbout);
    //get the mailbox handle from  environment 
    this.mon2scbin = mon2scbin;
    this.mon2scbout = mon2scbout;
  endfunction
  
  //Compare the actual results with the expected results
  task main;
    transaction trans_in;
    transaction trans_out;
    forever begin
      mon_in_scb++;
      mon2scbin.get(trans_in);
      mon2scbout.get(trans_out);
      if(trans_in.rst)
        foreach (check[i])
          check[i] <= 8'hff;
      else if (trans_in.enable) begin
        if (!trans_in.rd_wr) begin
          check[trans_in.addr] <= trans_in.wr_data;
        end
        else if (trans_in.rd_wr) begin
          if (check[trans_in.addr] == trans_out.rd_data)      
          $display("Result is as Expected.\n\Reference: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
          else 
            $display("~~~~~~~~~~~~~~~~~~~ Wrong Result.\n\Reference: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
            

        end
        else begin
          $error("Wrong Result.\n\tExpeced: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
      end 
    end //forever
        num_transactions++;
      trans_in.display_in("[ --Scoreboard_in-- ]");
      trans_out.display_out("[ --Scoreboard_out-- ]");
    end
  endtask
  
endclass