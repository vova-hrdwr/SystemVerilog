//gets the packet from the monitor, generates the expected results 
//and compares with the actual results received from the monitor

class scoreboard;
   
  //create mailbox handle
  mailbox mon2scbin;
  mailbox mon2scbout;
  
  //count the number of transactions
  int num_transactions;
  // reference memory
  logic [7:0]check[7:0] ='{default: 8'hFF};
  logic [15:0]res_check='{default: 8'b1111111111111111};
  integer mon_in_scb;
  
  //constructor
  function new(mailbox mon2scbin, mailbox mon2scbout);
    //get the mailbox handle from  environment 
    this.mon2scbin = mon2scbin;
    this.mon2scbout = mon2scbout;
  endfunction
  
  //Compare the actual results with the expected results
  task main;
    transaction trans_in;
    transaction trans_out;
    forever begin
      mon_in_scb++;
      mon2scbin.get(trans_in);
      mon2scbout.get(trans_out);
      //Memory Part Verification
      if (trans_in.enable) begin
      if (!trans_in.rd_wr) begin
          check[trans_in.addr] <= trans_in.wr_data;
        end
      else if (trans_in.rd_wr) begin
        if (check[trans_in.addr] == trans_out.rd_data)      
          $display("~~~~~~~~~~~~~~Expected~~Memory~~Expected~~~~~~~~~~~~~~~~~~~~~~~~~~~Result is as Expected.\n\Reference: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
          else 
            $display("~~~~~~~~~~~~~Wrong~~Memory~~Wrong~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Wrong Result.\n\Reference: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
            

        end
        else begin
          $error("Wrong Result.\n\tExpeced: %0d Actual: %0d",check[trans_in.addr], trans_out.rd_data);
      end
        if (check[3][0]) begin
          case(check[2][2:0])
            8'b000: res_check = 0;
            8'b001: res_check = check[0]+check[1];
            8'b010: res_check = check[0]-check[1];
            8'b011: res_check = check[0]*check[1];
            8'b100: res_check = (check[1]==0) ? 16'hDEAD : check[0]/check[1];
          endcase
          if (res_check == trans_out.res_out)
            $display("~~~~~~~~~~~~~~~~~Expected~~ALU~~Expected~~~~~~~~~~~~~~~~~~ Result is as Expected.\n\Reference: %0d Actual: %0d",res_check, trans_out.res_out);
          else 
            $display("~~~~~~~~~~~~~~~~~Wrong~~ALU~~Wrong~~~~~~~~~~~~~~~~~~ Wrong Result.\n\Reference: %0d Actual: %0d",res_check, trans_out.res_out);
        end //if check
            
            
            
        
    end //if enable
        num_transactions++;
      trans_in.display_in("[ --Scoreboard_in-- ]");
      trans_out.display_out("[ --Scoreboard_out-- ]");
    end//forever
  endtask
  
endclass